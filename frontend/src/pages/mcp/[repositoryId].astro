---
import ToolContainer from '@/components/tool/ToolContainer.tsx';
import ToolHead from '@/components/tool/ToolHead.tsx';
import BaseLayout from '@/layouts/BaseLayout.astro';
import { loadMcpData } from '@/lib/mcp-data-processor.tsx';
import { formatRepositoryName } from '@/lib/utils';
import { marked } from 'marked';

export async function getStaticPaths() {
  // Load data from input.json
  const { servers } = await loadMcpData();
  
  // Generate static paths for all servers
  const paths = servers.map((server) => ({
    params: { repositoryId: server.id },
    props: { server }
  }));

  return paths;
}

const { server } = Astro.props;

// Helper function to get category emoji
const getCategoryEmoji = (icon: string): string => {
  const iconMap: Record<string, string> = {
    'pickaxe': '⛏️',
    'code': '💻',
    'brain': '🧠',
    'cloud-upload': '☁️',
    'shield': '🛡️',
    'bitcoin': '₿',
    'browser': '🌐',
    'cloud': '☁️',
    'message-circle': '💬',
    'palette': '🎨',
    'database': '🗄️',
    'terminal': '💻',
    'users': '👥',
    'star': '⭐',
    'tool': '🔧'
  };
  return iconMap[icon] || '🔧';
};

// Process README content as markdown
let processedReadmeContent = '';
if (server.readmeContent) {
  // Configure marked for better rendering
  marked.setOptions({
    gfm: true,
    breaks: true
  });
  
  processedReadmeContent = await marked(server.readmeContent);
}

// Format repository name for display
const formattedName = formatRepositoryName(server.name);

// SEO Data
const title = `${formattedName} - MCP Repository | Free DevTools by Hexmos`;
const description = server.description;
const keywords = [
  'mcp repository',
  'model context protocol',
  server.name.toLowerCase(),
  'ai agent tools',
  'mcp directory',
  'open source mcp'
];

// Breadcrumb data
const breadcrumbItems = [
  { label: 'Free DevTools', href: '/freedevtools/' },
  { label: 'MCP Directory', href: '/freedevtools/mcp/' },
  { label: 'Repositories', href: '/freedevtools/mcp/' },
  { label: formattedName }
];
---

<BaseLayout 
  name={formattedName}
  title={title}
  path={`/freedevtools/mcp/${server.id}`}
  description={description}
  canonical={`https://hexmos.com/freedevtools/mcp/${server.id}`}
  themeColor="#3b82f6"
  keywords={keywords}
  ogImage="https://hexmos.com/freedevtools/tool-banners/mcp-directory-banner.png"
  twitterImage="https://hexmos.com/freedevtools/tool-banners/mcp-directory-banner.png"
  datePublished="2025-01-30"
  softwareVersion="1.0.0"
  features={[
    `MCP Repository: ${formattedName}`,
    `License: ${server.license}`,
    `GitHub Stars: ${server.stats.githubStars}`,
    'Detailed documentation and usage examples'
  ]}
>
  <ToolContainer>
    
    <ToolHead 
      name={formattedName}
      description={server.description}
      breadcrumbItems={breadcrumbItems}
      client:load

    />
    <!-- Repository Details -->
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 mt-6">
      <!-- Main Content -->
      <div class="lg:col-span-2">
        <!-- Repository Header with Image -->
        <div class="bg-white dark:bg-slate-900 border border-slate-200 dark:border-slate-700 rounded-lg p-6 mb-6">
          <div class="flex items-start space-x-6">
            <!-- Repository Image -->
            <div class="flex-shrink-0">
              {server.imageUrl ? (
                <img 
                  src={server.imageUrl} 
                  alt={`${formattedName} logo`}
                  class="w-30 h-30 rounded-lg object-cover border border-slate-200 dark:border-slate-700"
                  style="width: 120px; height: 120px;"
                />
              ) : (
                <div class="w-30 h-30 rounded-lg bg-slate-100 dark:bg-slate-800 border border-slate-200 dark:border-slate-700 flex items-center justify-center" style="width: 120px; height: 120px;">
                  <img 
                    src="/freedevtools/svg_icons/automation/mcp-server-stroke-rounded.svg" 
                    alt="MCP Server"
                    class="w-16 h-16 text-slate-400"
                  />
                </div>
              )}
            </div>
            
          
            
            <!-- License Badge (Bottom Right) -->
            <div class="flex-shrink-0">
              <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200">
                {server.license}
              </span>
            </div>
          </div>
        </div>
        
        <!-- Documentation Section -->
        <div class="bg-white dark:bg-slate-900 border border-slate-200 dark:border-slate-700 rounded-lg p-6">
          <h2 class="text-2xl font-bold text-gray-900 dark:text-gray-100 mb-4">Documentation</h2>
          
          {server.readmeContent ? (
            <div class="bg-slate-50 dark:bg-slate-800/50 rounded-lg p-6">
              <div class="prose prose-slate dark:prose-invert max-w-none prose-headings:text-slate-900 dark:prose-headings:text-slate-100 prose-p:text-slate-700 dark:prose-p:text-slate-300 prose-code:text-blue-600 dark:prose-code:text-blue-400 prose-code:bg-slate-100 dark:prose-code:bg-slate-700 prose-code:px-1 prose-code:py-0.5 prose-code:rounded prose-pre:bg-slate-100 dark:prose-pre:bg-slate-800 prose-pre:border prose-pre:border-slate-200 dark:prose-pre:border-slate-600 prose-blockquote:border-l-blue-500 prose-blockquote:bg-slate-100 dark:prose-blockquote:bg-slate-700 prose-blockquote:px-4 prose-blockquote:py-2 prose-blockquote:rounded prose-ul:space-y-1 prose-li:text-slate-700 dark:prose-li:text-slate-300">
                <div set:html={processedReadmeContent}></div>
              </div>
            </div>
          ) : (
            <div class="text-center py-12">
              <div class="text-6xl mb-4">📝</div>
              <h3 class="text-xl font-semibold text-gray-900 dark:text-gray-100 mb-2">
                No documentation available
              </h3>
              <p class="text-gray-600 dark:text-gray-400">
                This repository doesn't have README content available yet.
              </p>
            </div>
          )}
        </div>
      </div>

      <!-- Sidebar -->
      <div class="space-y-6">
        <!-- Quick Info -->
        <div class="bg-white dark:bg-slate-900 border border-slate-200 dark:border-slate-700 rounded-lg p-6">
          <h3 class="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4">Quick Info</h3>
          <div class="space-y-3">
            <div class="flex justify-between items-center">
              <span class="text-gray-600 dark:text-gray-400 flex items-center space-x-2">
                <img src="/freedevtools/svg_icons/grooveshark/github.svg" alt="GitHub" class="w-4 h-4 dark:brightness-0 dark:invert" />
                <span>GitHub Stars</span>
              </span>
              <span class="font-medium flex items-center space-x-1">
                <span>⭐</span>
                <span>{server.stats.githubStars}</span>
              </span>
            </div>
            <div class="flex justify-between items-center">
              <span class="text-gray-600 dark:text-gray-400 flex items-center space-x-2">
                <img src="/freedevtools/svg_icons/cmake/npm.svg" alt="NPM" class="w-4 h-4 dark:brightness-0 dark:invert" />
                <span>Weekly Downloads</span>
              </span>
              <span class="font-medium flex items-center space-x-1">
                <span>📦</span>
                <span>{server.stats.weeklyDownloads}</span>
              </span>
            </div>
            <div class="flex justify-between items-center">
              <span class="text-gray-600 dark:text-gray-400 flex items-center space-x-2">
                <span>🛠️</span>
                <span>Tools</span>
              </span>
              <span class="font-medium">{server.stats.tools}</span>
            </div>
            <div class="flex justify-between items-center">
              <span class="text-gray-600 dark:text-gray-400 flex items-center space-x-2">
                <span>🕒</span>
                <span>Last Updated</span>
              </span>
              <span class="font-medium">{server.stats.lastUpdated}</span>
            </div>
          </div>
        </div>

        <!-- Categories -->
        <div class="bg-white dark:bg-slate-900 border border-slate-200 dark:border-slate-700 rounded-lg p-6">
          <h3 class="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4">Categories</h3>
          <div class="flex flex-wrap gap-2">
            {server.categories.map((category) => (
              <span class="px-3 py-1 text-sm bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 rounded-full">
                {getCategoryEmoji(category)} {category}
              </span>
            ))}
          </div>
        </div>

        <!-- Actions -->
        <div class="bg-white dark:bg-slate-900 border border-slate-200 dark:border-slate-700 rounded-lg p-6">
          <h3 class="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4">Actions</h3>
          <div class="space-y-3">
            <a 
              href={server.githubUrl}
              target="_blank"
              rel="noopener noreferrer"
              class="w-full flex items-center justify-center space-x-2 px-4 py-2 bg-gray-900 dark:bg-gray-100 text-white dark:text-gray-900 rounded-lg hover:bg-gray-800 dark:hover:bg-gray-200 transition-colors"
            >
              <img src="/freedevtools/svg_icons/grooveshark/github.svg" alt="GitHub" class="w-4 h-4 filter brightness-0 invert dark:brightness-100 dark:invert-0" />
              <span>View on GitHub</span>
            </a>
            {server.npmUrl && (
              <a 
                href={server.npmUrl}
                target="_blank"
                rel="noopener noreferrer"
                class="w-full flex items-center justify-center space-x-2 px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors"
              >
                <img src="/freedevtools/svg_icons/cmake/npm.svg" alt="NPM" class="w-4 h-4" />
                <span>View on NPM</span>
              </a>
            )}
          </div>
        </div>
      </div>
    </div>
  </ToolContainer>
</BaseLayout>
