---
import ToolContainer from '@/components/tool/ToolContainer.tsx';
import ToolHead from '@/components/tool/ToolHead.tsx';
import BaseLayout from '@/layouts/BaseLayout.astro';
import { loadMcpData } from '@/lib/mcp-data-processor.tsx';
import { formatRepositoryName } from '@/lib/utils';

export async function getStaticPaths() {
  // Load data from input.json
  const { categories } = await loadMcpData();
  
  // Generate static paths for all categories
  const paths = categories.map((category) => ({
    params: { category: category.id },
    props: { category }
  }));

  return paths;
}

const { category } = Astro.props;
const { servers, categories: allCategories } = await loadMcpData();

// Filter servers for this category
const categoryServers = servers.filter(server => 
  server.categories.includes(category.id)
);

// Get category info
const categoryInfo = allCategories.find(cat => cat.id === category.id);

// Helper function to get category emoji
const getCategoryEmoji = (icon: string): string => {
  const iconMap: Record<string, string> = {
    'pickaxe': '⛏️',
    'code': '💻',
    'brain': '🧠',
    'cloud-upload': '☁️',
    'shield': '🛡️',
    'bitcoin': '₿',
    'browser': '🌐',
    'cloud': '☁️',
    'message-circle': '💬',
    'palette': '🎨',
    'database': '🗄️',
    'terminal': '💻',
    'users': '👥',
    'star': '⭐',
    'tool': '🔧'
  };
  return iconMap[icon] || '🔧';
};

// SEO Data
const title = `${categoryInfo?.name || category.id} MCP Repositories - Browse ${categoryServers.length} Model Context Protocol Repositories | Free DevTools by Hexmos`;
const description = `Discover ${categoryServers.length} MCP repositories in the ${categoryInfo?.name || category.id} category. Find the perfect Model Context Protocol repository for your AI agent project.`;
const keywords = [
  'mcp repositories',
  'model context protocol',
  categoryInfo?.name || category.id,
  'ai agent tools',
  'mcp directory',
  'open source mcp'
];

// Breadcrumb data
const breadcrumbItems = [
  { label: 'Free DevTools', href: '/freedevtools/' },
  { label: 'MCP Directory', href: '/freedevtools/mcp/' },
  { label: categoryInfo?.name || category.id }
];
---

<BaseLayout 
  name={`${categoryInfo?.name || category.id} MCP Repositories`}
  title={title}
  path={`/freedevtools/mcp/${category.id}`}
  description={description}
  canonical={`https://hexmos.com/freedevtools/mcp/${category.id}`}
  themeColor="#3b82f6"
  keywords={keywords}
  ogImage="https://hexmos.com/freedevtools/tool-banners/mcp-directory-banner.png"
  twitterImage="https://hexmos.com/freedevtools/tool-banners/mcp-directory-banner.png"
  datePublished="2025-01-30"
  softwareVersion="1.0.0"
  features={[
    `Browse ${categoryServers.length} MCP repositories in ${categoryInfo?.name || category.id}`,
    'Filter by license and quality scores',
    'Search and sort functionality',
    'Detailed repository information'
  ]}
>
  <ToolContainer>
    
    <ToolHead 
      name={`${categoryInfo?.name || category.id} MCP Repositories`}
      description={`${categoryServers.length} repositories in this category. ${categoryInfo?.description || `MCP repositories in the ${category.id} category`}`}
      breadcrumbItems={breadcrumbItems}
      client:load
    />

    <!-- Repositories List -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mt-4">
      {categoryServers.length === 0 ? (
        <div class="col-span-1 lg:col-span-2 text-center py-12">
          <div class="text-6xl mb-4">🔍</div>
          <h3 class="text-xl font-semibold text-gray-900 dark:text-gray-100 mb-2">
            No repositories found
          </h3>
          <p class="text-gray-600 dark:text-gray-400">
            There are no MCP repositories in the {categoryInfo?.name || category.id} category yet.
          </p>
        </div>
      ) : (
        categoryServers.map((server) => {
          const formattedName = formatRepositoryName(server.name);
          return (
            <a 
              href={`/freedevtools/mcp/${server.id}`}
              class="block bg-white dark:bg-slate-900 border border-slate-200 dark:border-slate-700 rounded-lg p-6 hover:shadow-md transition-all duration-300 hover:-translate-y-1 cursor-pointer"
            >
              <div class="space-y-3">
                <!-- Row 1: Image + Title and Description -->
                <div class="flex items-center space-x-4">
                  <!-- Repository Image -->
                  <div class="flex-shrink-0">
                    {server.imageUrl ? (
                      <img 
                        src={server.imageUrl} 
                        alt={`${formattedName} logo`}
                        class="w-16 h-16 rounded-lg object-cover border border-slate-200 dark:border-slate-700"
                      />
                    ) : (
                      <div class="w-16 h-16 rounded-lg bg-slate-100 dark:bg-slate-800 border border-slate-200 dark:border-slate-700 flex items-center justify-center">
                        <img 
                          src="/freedevtools/svg_icons/automation/mcp-server-stroke-rounded.svg" 
                          alt="MCP Server"
                          class="w-8 h-8 text-slate-400"
                        />
                      </div>
                    )}
                  </div>
                  
                  <!-- Title and Description -->
                  <div class="flex-1 min-w-0">
                    <h3 class="text-xl font-semibold text-gray-900 dark:text-gray-100 mb-2">
                      {formattedName}
                    </h3>
                    <p class="text-gray-600 dark:text-gray-400 line-clamp-2">
                      {server.description}
                    </p>
                  </div>
                  
                  <!-- Arrow Icon -->
                  <div class="flex items-center ml-4 flex-shrink-0">
                    <span class="text-gray-400 dark:text-gray-500">→</span>
                  </div>
                </div>
                
                <!-- Row 2: Stats and License (Full Width) -->
                <div class="flex items-center justify-between">
                  <div class="flex items-center space-x-4 text-sm text-gray-500 dark:text-gray-400">
                    <div class="flex items-center space-x-1">
                      <img src="/freedevtools/svg_icons/grooveshark/github.svg" alt="GitHub" class="w-4 h-4 dark:brightness-0 dark:invert" />
                      <span>⭐ {server.stats.githubStars}</span>
                    </div>
                    <div class="flex items-center space-x-1">
                      <img src="/freedevtools/svg_icons/cmake/npm.svg" alt="NPM" class="w-4 h-4 dark:brightness-0 dark:invert" />
                      <span>📦 {server.stats.weeklyDownloads}</span>
                    </div>
                    <span>🛠️ {server.stats.tools} tools</span>
                    <span>🕒 {server.stats.lastUpdated}</span>
                  </div>
                  <!-- License Badge (Right side) -->
                  <span class="px-2 py-1 text-xs font-medium bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded-full flex-shrink-0">
                    {server.license}
                  </span>
                </div>
              </div>
            </a>
          );
        })
      )}
    </div>
  </div>
</BaseLayout>
