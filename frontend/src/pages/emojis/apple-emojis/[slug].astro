---
import BaseLayout from '../../../layouts/BaseLayout.astro';
import AdBanner from '../../../components/banner/AdBanner';
// import CopyIcon from '../../../components/icons/CopyIcon.astro';
import { getAllAppleEmojis, getAppleEmojiBySlug } from '../../../lib/appleEmojis';
import VendorEmojiPage from '@/components/VendorEmojiPage';

export async function getStaticPaths() {
  const emojis = getAllAppleEmojis();
  return emojis.map((emoji) => ({
    params: { slug: emoji.slug },
    props: { emoji }
  }));
}

const { slug } = Astro.params;
const emoji = getAppleEmojiBySlug(slug!);

if (!emoji) {
  return Astro.redirect('/freedevtools/emojis/apple-emojis/');
}

const cleanDescription = (text?: string) => {
  if (!text) return '';
  return text
    .replace(/<[^>]*>/g, '')
    .replace(/&nbsp;/g, ' ')
    .replace(/&amp;/g, '&')
    .replace(/&lt;/g, '<')
    .replace(/&gt;/g, '>')
    .replace(/&quot;/g, '"')
    .replace(/&#39;/g, "'")
    .replace(/[?]{2,}/g, '')
    .trim();
};
        

---

<BaseLayout
  name="Apple Emojis"
  path="/emojis/apple-emojis/"
  title={`${emoji.title} (Apple Style) - Emoji Evolution`}
  description={cleanDescription(emoji.apple_vendor_description || emoji.description)}
  canonical={`https://hexmos.com/freedevtools/emojis/apple-emojis/${emoji.slug}/`}
  showSidebar={false}
  showHeader={true}
>
  <div class="max-w-6xl mx-auto px-4 md:px-6 mt-[74px]">
    <div class="mb-16">
      <AdBanner />
    </div>
    <div class="mb-8">
        <nav class="text-sm text-slate-600 dark:text-slate-400 mb-4">
          <a href="/freedevtools/" class="hover:text-blue-600 dark:hover:text-blue-400">Free DevTools</a>
          <span class="mx-2">/</span>
          <a href="/freedevtools/emojis/" class="hover:text-blue-600 dark:hover:text-blue-400">Emojis</a>
          <span class="mx-2">/</span>
          <a href="/freedevtools/emojis/apple-emojis" class="hover:text-blue-600 dark:hover:text-blue-400">Apple Emojis</a>
          <span class="mx-2">/</span>
          <span>{emoji.title || emoji.fluentui_metadata?.cldr || emoji.slug}</span>
        </nav>
      </div>
  
    <VendorEmojiPage client:load emoji={emoji} />
    
        <!-- Navigation -->
        <div class="mt-10 pt-6 mb-8 border-t border-slate-200 dark:border-slate-700">
            <div class="flex flex-wrap gap-4">
              <a 
                href="/freedevtools/emojis/apple-emojis" 
                class="inline-flex items-center px-4 py-2 text-sm font-medium text-blue-600 dark:text-blue-400 bg-blue-50 dark:bg-blue-900/20 rounded-lg hover:bg-blue-100 dark:hover:bg-blue-900/30 transition-colors"
              >
                ‚Üê  Back to Apple Emojis
              </a>
              {(emoji.fluentui_metadata && emoji.fluentui_metadata.group) || (emoji.emoji_net_data && emoji.emoji_net_data.category) || (emoji as any).given_category ? (
                <a 
                  href={`/freedevtools/emojis/apple-emojis/${(((emoji.fluentui_metadata && emoji.fluentui_metadata.group) ? emoji.fluentui_metadata.group : (emoji.emoji_net_data && emoji.emoji_net_data.category) || (emoji as any).given_category || 'Other') as string).toLowerCase().replace(/[^a-z0-9]+/g, '-')}`}
                  class="inline-flex items-center px-4 py-2 text-sm font-medium text-slate-600 dark:text-slate-400 bg-slate-50 dark:bg-slate-800 rounded-lg hover:bg-slate-100 dark:hover:bg-slate-700 transition-colors"
                >
                  View {(((emoji.fluentui_metadata && emoji.fluentui_metadata.group) ? emoji.fluentui_metadata.group : (emoji.emoji_net_data && emoji.emoji_net_data.category) || (emoji as any).given_category || 'Other') as string).replace(/-/g, ' ').replace(/\b\w/g, (l) => l.toUpperCase())} Category
                </a>
              ) : null}
            </div>
          </div>
  </div>
</BaseLayout>
