---
import CreditsButton from "@/components/buttons/CreditsButton";
import ToolContainer from "@/components/tool/ToolContainer";
import ToolContentCardWrapper from "@/components/tool/ToolContentCardWrapper";
import ToolHead from "@/components/tool/ToolHead";
import { Card } from "@/components/ui/card";
import { Download, Filter, Star } from "lucide-react";

// Helper function to get platform emoji
const getPlatformEmoji = (platformName: string): string => {
  const emojiMap: Record<string, string> = {
    'android': '📱',
    'aws': '☁️',
    'bash': '🐚',
    'common': '🔧',
    'git': '📦',
    'linux': '🐧',
    'macos': '🍎',
    'node': '🟢',
    'python': '🐍',
    'windows': '🪟',
    'docker': '🐳',
    'kubernetes': '☸️',
    'terraform': '🏗️',
    'npm': '📦',
    'yarn': '🧶',
    'pnpm': '📦',
    'go': '🐹',
    'rust': '🦀',
    'php': '🐘',
    'ruby': '💎',
    'java': '☕',
    'csharp': '🔷',
    'cpp': '⚡',
    'c': '⚡',
    'swift': '🦉',
    'kotlin': '🟣',
    'scala': '🔴',
    'clojure': '🟢',
    'haskell': '🔷',
    'ocaml': '🟠',
    'fsharp': '🔵',
    'elixir': '💜',
    'erlang': '🔴',
    'lua': '🔵',
    'perl': '🐪',
    'r': '📊',
    'matlab': '🧮',
    'julia': '🔴',
    'dart': '🎯',
    'flutter': '🦋',
    'react': '⚛️',
    'vue': '💚',
    'angular': '🅰️',
    'svelte': '🧡',
    'next': '▲',
    'nuxt': '💚',
    'gatsby': '🌐',
    'webpack': '📦',
    'vite': '⚡',
    'rollup': '📦',
    'parcel': '📦',
    'babel': '🔧',
    'typescript': '🔷',
    'javascript': '🟨',
    'html': '🌐',
    'css': '🎨',
    'sass': '💅',
    'less': '🔷',
    'stylus': '💄',
    'postcss': '🔧',
    'tailwind': '🎨',
    'bootstrap': '🎨',
    'material': '🎨',
    'antd': '🎨',
    'chakra': '🎨',
    'mantine': '🎨',
    'semantic': '🎨',
    'bulma': '🎨',
    'foundation': '🎨',
    'pure': '🎨',
    'skeleton': '🎨',
    'milligram': '🎨',
    'spectre': '🎨',
    'uikit': '🎨',
    'materialize': '🎨',
    'vuetify': '🎨',
    'quasar': '🎨',
    'prime': '🎨',
    'element': '🎨',
    'iview': '🎨',
    'naive': '🎨',
    'arco': '🎨',
    'tdesign': '🎨',
    'nutui': '🎨',
    'vant': '🎨',
    'mint': '🎨',
    'cube': '🎨',
    'mand': '🎨',
    'weui': '🎨',
    'jquery': '🎨',
    'lodash': '🔧',
    'moment': '📅',
    'dayjs': '📅',
    'date-fns': '📅',
    'luxon': '📅',
    'ramda': '🔧',
    'underscore': '🔧',
    'immutable': '🔧',
    'mobx': '🔧',
    'redux': '🔧',
    'vuex': '🔧',
    'pinia': '🔧',
    'zustand': '🔧',
    'jotai': '🔧',
    'recoil': '🔧',
    'swr': '🔧',
    'react-query': '🔧',
    'apollo': '🔧',
    'graphql': '🔧',
    'prisma': '🔧',
    'sequelize': '🔧',
    'mongoose': '🔧',
    'typeorm': '🔧',
    'knex': '🔧',
    'bookshelf': '🔧',
    'waterline': '🔧',
    'sails': '🔧',
    'loopback': '🔧',
    'feathers': '🔧',
    'hapi': '🔧',
    'fastify': '🔧',
    'koa': '🔧',
    'express': '🔧',
    'connect': '🔧',
    'restify': '🔧',
    'polka': '🔧',
    'micro': '🔧',
    'vercel': '🔧',
    'netlify': '🔧',
    'heroku': '🔧',
    'railway': '🔧',
    'render': '🔧',
    'fly': '🔧',
    'digitalocean': '☁️',
    'linode': '☁️',
    'vultr': '☁️',
    'azure': '☁️',
    'gcp': '☁️',
    'ibm': '☁️',
    'oracle': '☁️',
    'alibaba': '☁️',
    'tencent': '☁️',
    'baidu': '☁️',
    'huawei': '☁️',
    'rackspace': '☁️',
    'joyent': '☁️',
    'softlayer': '☁️',
    'ovh': '☁️',
    'scaleway': '☁️',
    'hetzner': '☁️',
    'contabo': '☁️',
  };

  return emojiMap[platformName.toLowerCase()] || '🔧';
};

// Helper function to render command card
function renderCommandCard(command: any): string {
  return `
    <a
      href="${command.url}"
      class="block bg-white dark:bg-slate-900 dark:border-slate-900 border border-slate-200 rounded-xl p-6 shadow-sm hover:shadow-md transition-all duration-200"
    >
      <div class="flex justify-between items-center mb-4">
        <h3 class="text-lg font-bold text-slate-900 dark:text-white">
          ${command.name}
        </h3>
        <span class="text-sm text-slate-500 font-medium">
          ${command.category || 'Command'}
        </span>
      </div>
      
      <p class="text-sm text-slate-600 dark:text-slate-400">
        ${command.description}
      </p>
    </a>
  `;
}

const { commands, currentPage, totalPages, totalCommands, platform, breadcrumbItems } = Astro.props;
---

<ToolContainer>
  <ToolHead
    name={`${platform} Commands`}
    description={`Comprehensive documentation for ${platform} command-line tools. Learn ${platform} commands quickly with practical examples.`}
    breadcrumbItems={breadcrumbItems}
  />

  <!-- Platform Header -->
  <div class="text-center mb-8">
    <div class="flex items-center justify-center mb-4">
      <div class="text-6xl mr-4">
        {getPlatformEmoji(platform)}
      </div>
      <div>
        <h1 class="text-3xl font-bold text-slate-900 dark:text-white capitalize">
          {platform} Commands
        </h1>
        <p class="text-lg text-slate-600 dark:text-slate-400">
          {totalCommands} commands available for {platform}
        </p>
      </div>
    </div>
  </div>

  <!-- Pagination Info -->
  <div class="bg-slate-50 dark:bg-slate-800 rounded-lg p-4 mb-6">
    <div class="text-sm text-slate-600 dark:text-slate-400 text-center">
      Showing {commands.length} of {totalCommands} commands (Page {currentPage} of {totalPages})
    </div>
  </div>

  <!-- Commands Grid -->
  <div class="mt-10 mb-6">
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      {commands.map((command: any) => (
        <Fragment set:html={renderCommandCard(command)} />
      ))}
    </div>
  </div>

  <!-- Bottom Pagination -->
  <div class="mt-8 pt-6 border-t border-slate-200 dark:border-slate-700">
    <!-- Middle section with page numbers -->
    <div class="flex items-center justify-center gap-2 mb-4">
      {currentPage > 1 ? (
        <a
          href={currentPage === 2 ? `/freedevtools/tldr/${platform}/` : `/freedevtools/tldr/${platform}/${currentPage - 1}/`}
          class="inline-flex items-center px-3 py-2 text-sm font-medium text-slate-600 dark:text-slate-400 bg-white dark:bg-slate-700 border border-slate-300 dark:border-slate-600 rounded hover:bg-slate-50 dark:hover:bg-slate-600 transition-colors"
        >
          ← Previous
        </a>
      ) : (
        <span class="inline-flex items-center px-3 py-2 text-sm font-medium text-slate-400 dark:text-slate-500 bg-slate-100 dark:bg-slate-800 border border-slate-200 dark:border-slate-700 rounded cursor-not-allowed">
          ← Previous
        </span>
      )}

      <!-- Page Numbers -->
      {currentPage > 3 && (
        <>
          <a
            href={`/freedevtools/tldr/${platform}/`}
            class="px-3 py-2 text-sm font-medium text-slate-600 dark:text-slate-400 bg-white dark:bg-slate-700 border border-slate-300 dark:border-slate-600 rounded hover:bg-slate-50 dark:hover:bg-slate-600 transition-colors"
          >
            1
          </a>
          <span class="px-2 text-slate-400">...</span>
        </>
      )}

      {Array.from({ length: Math.min(5, totalPages) }, (_, i) => {
        const pageNum = Math.max(1, Math.min(totalPages - 4, currentPage - 2)) + i;
        if (pageNum > totalPages) return null;

        const isCurrentPage = pageNum === currentPage;
        const pageUrl = pageNum === 1 ? `/freedevtools/tldr/${platform}/` : `/freedevtools/tldr/${platform}/${pageNum}/`;

        return (
          <a
            href={pageUrl}
            class={`px-3 py-2 text-sm font-medium rounded transition-colors ${isCurrentPage
              ? 'text-white bg-blue-600 border border-blue-600'
              : 'text-slate-600 dark:text-slate-400 bg-white dark:bg-slate-700 border border-slate-300 dark:border-slate-600 hover:bg-slate-50 dark:hover:bg-slate-600'
              }`}
          >
            {pageNum}
          </a>
        );
      })}

      {currentPage < totalPages - 2 && (
        <>
          <span class="px-2 text-slate-400">...</span>
          <a
            href={`/freedevtools/tldr/${platform}/${totalPages}/`}
            class="px-3 py-2 text-sm font-medium text-slate-600 dark:text-slate-400 bg-white dark:bg-slate-700 border border-slate-300 dark:border-slate-600 rounded hover:bg-slate-50 dark:hover:bg-slate-600 transition-colors"
          >
            {totalPages}
          </a>
        </>
      )}

      {currentPage < totalPages ? (
        <a
          href={`/freedevtools/tldr/${platform}/${currentPage + 1}/`}
          class="inline-flex items-center px-3 py-2 text-sm font-medium text-slate-600 dark:text-slate-400 bg-white dark:bg-slate-700 border border-slate-300 dark:border-slate-600 rounded hover:bg-slate-50 dark:hover:bg-slate-600 transition-colors"
        >
          Next →
        </a>
      ) : (
        <span class="inline-flex items-center px-3 py-2 text-sm font-medium text-slate-400 dark:text-slate-500 bg-slate-100 dark:bg-slate-800 border border-slate-200 dark:border-slate-700 rounded cursor-not-allowed">
          Next →
        </span>
      )}
    </div>

    <!-- Bottom section with info and go to page -->
    <div class="flex flex-col sm:flex-row items-center justify-center gap-4">
      <div class="text-sm text-slate-600 dark:text-slate-400">
        Page {currentPage} of {totalPages} • {totalCommands} total commands
      </div>
      
      <!-- Go to page input -->
      <div class="flex items-center gap-2">
        <span class="text-sm text-slate-600 dark:text-slate-400">Go to page:</span>
        <input
          type="number"
          min="1"
          max={totalPages}
          value={currentPage}
          class="w-16 px-2 py-1 text-sm border border-slate-300 dark:border-slate-600 rounded bg-white dark:bg-slate-800 text-slate-900 dark:text-slate-100 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
          onkeypress={`if(event.key==='Enter'){const pageNum=parseInt(this.value);const totalPages=parseInt(this.max);if(pageNum>=1&&pageNum<=totalPages){const url=pageNum===1?'/freedevtools/tldr/${platform}/':'/freedevtools/tldr/${platform}/'+pageNum+'/';window.location.href=url}}`}
        />
        <button
          onclick={`const input=this.previousElementSibling;const pageNum=parseInt(input.value);const totalPages=parseInt(input.max);if(pageNum>=1&&pageNum<=totalPages){const url=pageNum===1?'/freedevtools/tldr/${platform}/':'/freedevtools/tldr/${platform}/'+pageNum+'/';window.location.href=url}`}
          class="px-3 py-1 text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 rounded transition-colors"
        >
          Go
        </button>
      </div>
    </div>
  </div>

  <!-- Features -->
  <div class="mb-10 mt-6">
    <ToolContentCardWrapper>
      <Card className="p-6">
        <h2 class="text-xl font-semibold mb-6 text-center">Why Use Our ${platform} Commands?</h2>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
          <div class="text-center space-y-2">
            <Download className="h-8 w-8 text-blue-600 mx-auto" />
            <h3 class="font-semibold">Quick Reference</h3>
            <p class="text-sm text-gray-600 dark:text-gray-400">
              Get ${platform} command examples and usage instantly without reading full documentation.
            </p>
          </div>
          <div class="text-center space-y-2">
            <Filter className="h-8 w-8 text-green-600 mx-auto" />
            <h3 class="font-semibold">Platform Specific</h3>
            <p class="text-sm text-gray-600 dark:text-gray-400">
              Commands organized specifically for ${platform} for easy navigation and learning.
            </p>
          </div>
          <div class="text-center space-y-2">
            <Star className="h-8 w-8 text-yellow-600 mx-auto" />
            <h3 class="font-semibold">Practical Examples</h3>
            <p class="text-sm text-gray-600 dark:text-gray-400">
              Real-world ${platform} examples that you can copy and use immediately.
            </p>
          </div>
        </div>
      </Card>
    </ToolContentCardWrapper>
  </div>

  <!-- Credits Section -->
  <div class="mt-10 pt-6 mb-8 border-t border-slate-200 dark:border-slate-700">
    <div class="flex flex-wrap gap-4">
      <a
        href="/freedevtools/tldr/"
        class="inline-flex items-center px-4 py-2 text-sm font-medium text-blue-600 dark:text-blue-400 bg-blue-50 dark:bg-blue-900/20 rounded-lg hover:bg-blue-100 dark:hover:bg-blue-900/30 transition-colors"
      >
        ←  Back to TLDR
      </a>
      <CreditsButton href="/freedevtools/tldr/credits/" />
    </div>
  </div>
</ToolContainer>
