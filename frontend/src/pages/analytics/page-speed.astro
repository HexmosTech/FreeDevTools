---
import BaseLayout from '@/layouts/BaseLayout.astro';
import { readdir, readFile } from 'fs/promises';
import { join } from 'path';
import PageSpeedAnalytics from './page-speed.tsx';

// Load files directly from the filesystem
const analyticsDir = join(process.cwd(), 'public', 'analytics', 'output');
const files = await readdir(analyticsDir);

const jsonFiles = await Promise.all(
  files
    .filter(file => file.endsWith('.json'))
    .map(async (file) => {
      const filePath = join(analyticsDir, file);
      const content = await readFile(filePath, 'utf-8');
      const data = JSON.parse(content);
      
      return {
        filename: file,
        url: file
          .replace(/__(desktop|mobile)_\d{8}_\d{6}\.json$/, '')
          .replace(/_/g, '/')
          .replace('freedevtools', 'https://hexmos.com/freedevtools'),
        timestamp: file.match(/__(desktop|mobile)_(\d{8}_\d{6})\.json$/)?.[2] || 'unknown',
        data: data
      };
    })
);

// Sort by timestamp
jsonFiles.sort((a, b) => b.timestamp.localeCompare(a.timestamp));

// Debug: Log the number of files and some examples
console.log('Total analytics files loaded:', jsonFiles.length);
console.log('All filenames:', jsonFiles.map(f => f.filename));
---

<BaseLayout
name="MCP Directory"
title="data PageSpeed Analytics"
path="/freedevtools/mcp/1/"
description="data"
canonical="https://hexmos.com/freedevtools/mcp/1/"
themeColor="#3b82f6"
keywords={["PageSpeed", "Analytics", "Free DevTools"]}
ogImage="https://hexmos.com/freedevtools/tool-banners/mcp-directory-banner.png"
twitterImage="https://hexmos.com/freedevtools/tool-banners/mcp-directory-banner.png"
datePublished="2025-01-30"
softwareVersion="1.0.0"
features={[
  'Filter by category and license',
  'Search and sort functionality'
]}
>
<!-- PageSpeed Metrics Reference Table -->
<div class="max-w-6xl mx-auto px-4 py-8">
  <div class="bg-white dark:bg-slate-900 rounded-lg shadow-lg overflow-hidden">
    
    <div class="overflow-x-auto">
      <table class="w-full">
        <thead class="bg-slate-50 dark:bg-slate-800">
          <tr>
            <th class="px-4 py-3 text-left text-xs font-medium text-slate-500 dark:text-slate-400 uppercase tracking-wider">Metric</th>
            <th class="px-4 py-3 text-left text-xs font-medium text-slate-500 dark:text-slate-400 uppercase tracking-wider">Description</th>
            <th class="px-4 py-3 text-left text-xs font-medium text-green-600 dark:text-green-400 uppercase tracking-wider">Good (Green)</th>
            <th class="px-4 py-3 text-left text-xs font-medium text-yellow-600 dark:text-yellow-400 uppercase tracking-wider">Needs Improvement (Yellow)</th>
            <th class="px-4 py-3 text-left text-xs font-medium text-red-600 dark:text-red-400 uppercase tracking-wider">Poor (Red)</th>
          </tr>
        </thead>
        <tbody class="divide-y divide-slate-200 dark:divide-slate-700">
          <tr class="hover:bg-slate-50 dark:hover:bg-slate-800">
            <td class="px-4 py-4 text-sm font-medium text-slate-900 dark:text-slate-100">Largest Contentful Paint (LCP)</td>
            <td class="px-4 py-4 text-sm text-slate-600 dark:text-slate-400">Loading: The time it takes for the largest visual element (e.g., hero image, main text block) to load.</td>
            <td class="px-4 py-4 text-sm text-green-600 dark:text-green-400">≤2.5s</td>
            <td class="px-4 py-4 text-sm text-yellow-600 dark:text-yellow-400">2.5−4.0s</td>
            <td class="px-4 py-4 text-sm text-red-600 dark:text-red-400">>4.0s</td>
          </tr>
          <tr class="hover:bg-slate-50 dark:hover:bg-slate-800">
            <td class="px-4 py-4 text-sm font-medium text-slate-900 dark:text-slate-100">Interaction to Next Paint (INP)</td>
            <td class="px-4 py-4 text-sm text-slate-600 dark:text-slate-400">Interactivity: Measures the latency of all user interactions (clicks, taps, key presses) during the page's lifespan.</td>
            <td class="px-4 py-4 text-sm text-green-600 dark:text-green-400">≤200ms</td>
            <td class="px-4 py-4 text-sm text-yellow-600 dark:text-yellow-400">200−500ms</td>
            <td class="px-4 py-4 text-sm text-red-600 dark:text-red-400">>500ms</td>
          </tr>
          <tr class="hover:bg-slate-50 dark:hover:bg-slate-800">
            <td class="px-4 py-4 text-sm font-medium text-slate-900 dark:text-slate-100">Cumulative Layout Shift (CLS)</td>
            <td class="px-4 py-4 text-sm text-slate-600 dark:text-slate-400">Visual Stability: Measures the unexpected shifting of content on the page as it loads.</td>
            <td class="px-4 py-4 text-sm text-green-600 dark:text-green-400">≤0.1</td>
            <td class="px-4 py-4 text-sm text-yellow-600 dark:text-yellow-400">0.1−0.25</td>
            <td class="px-4 py-4 text-sm text-red-600 dark:text-red-400">>0.25</td>
          </tr>
          <tr class="hover:bg-slate-50 dark:hover:bg-slate-800">
            <td class="px-4 py-4 text-sm font-medium text-slate-900 dark:text-slate-100">First Contentful Paint (FCP)</td>
            <td class="px-4 py-4 text-sm text-slate-600 dark:text-slate-400">Perceived Load: Time until the first visual element (text, image, etc.) is rendered on the screen.</td>
            <td class="px-4 py-4 text-sm text-green-600 dark:text-green-400">≤1.8s</td>
            <td class="px-4 py-4 text-sm text-yellow-600 dark:text-yellow-400">1.8−3.0s</td>
            <td class="px-4 py-4 text-sm text-red-600 dark:text-red-400">>3.0s</td>
          </tr>
          <tr class="hover:bg-slate-50 dark:hover:bg-slate-800">
            <td class="px-4 py-4 text-sm font-medium text-slate-900 dark:text-slate-100">Total Blocking Time (TBT)</td>
            <td class="px-4 py-4 text-sm text-slate-600 dark:text-slate-400">Responsiveness (Lab Data): The total time the main thread was blocked, preventing responsiveness to user input.</td>
            <td class="px-4 py-4 text-sm text-green-600 dark:text-green-400">≤200ms</td>
            <td class="px-4 py-4 text-sm text-yellow-600 dark:text-yellow-400">200−600ms</td>
            <td class="px-4 py-4 text-sm text-red-600 dark:text-red-400">>600ms</td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
</div>

<PageSpeedAnalytics jsonFiles={jsonFiles} client:load />
</BaseLayout>