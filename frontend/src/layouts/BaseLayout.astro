---
import Header from '../components/Header.tsx';
// import Sidebar from '../components/Sidebar';
import { ThemeProvider } from '../components/theme/ThemeContext.tsx';
import ToastProvider from '../components/ToastProvider.tsx';
import '../styles/global.css';

export interface Props {
  name: string;
  title: string;
  path:string;
  description?: string;
  canonical?: string;
  themeColor?: string;
  keywords?: string[];
  ogImage?: string;
  twitterImage?: string;
  showSidebar?: boolean;
  showHeader?: boolean;
  datePublished?: string;
  softwareVersion?: string;
  features?: string[];
}

const { 
  name,
  title, 
  description, 
  canonical, 
  themeColor = "#1e40af", 
  keywords = [],
  ogImage = "https://hexmos.com/freedevtools/og-default.png",
  twitterImage = "https://hexmos.com/freedevtools/twitter-default.png",
  showHeader = true,
  datePublished,
  softwareVersion,
  features = [],
} = Astro.props;

const currentUrl = canonical || Astro.url.href;
const keywordsString = keywords.length > 0 ? keywords.join(', ') : '';

// Generate JSON-LD Schema
const generateSchema = (tool: any) => {
  if (!tool) return null;
  
  return {
    "@context": "https://schema.org",
    "@type": "SoftwareApplication",
    "name": tool.name,
    "description": tool.description,
    "url": tool.canonical,
    "applicationCategory": "DeveloperTool",
    "operatingSystem": "Any",
    "browserRequirements": "Requires JavaScript. Requires HTML5.",
    "softwareVersion": tool.softwareVersion || "1.0.0",
    "datePublished": tool.datePublished || new Date().toISOString(),
    "author": {
      "@type": "Organization",
      "name": "Free DevTools",
      "url": "https://hexmos.com/freedevtools/"
    },
    "publisher": {
      "@type": "Organization",
      "name": "Free DevTools",
      "url": "https://hexmos.com/freedevtools/"
    },
    "offers": {
      "@type": "Offer",
      "price": "0",
      "priceCurrency": "USD",
      "availability": "https://schema.org/InStock"
    },
    "featureList": tool.features || [],
    "keywords": tool.keywords?.join(", ") || "",
    "screenshot": tool.ogImage,
    "mainEntityOfPage": tool.canonical
  };
};

const schema =  generateSchema({name, description, softwareVersion,datePublished, canonical, ogImage, features, keywords});
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    
    <!-- Basic SEO Meta Tags -->
    <title>{title}</title>
    {description && <meta name="description" content={description} />}
    {keywordsString && <meta name="keywords" content={keywordsString} />}
    <meta name="theme-color" content={themeColor} />
    {canonical && <link rel="canonical" href={canonical} />}
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:title" content={title} />
    {description && <meta property="og:description" content={description} />}
    <meta property="og:url" content={currentUrl} />
    <meta property="og:image" content={ogImage} />
    <meta property="og:site_name" content="FreeDev Tools" />
    
    <!-- Twitter Card -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    {description && <meta name="twitter:description" content={description} />}
    <meta name="twitter:image" content={twitterImage} />
    <meta name="twitter:site" content="@freedevtools" />
    
    <!-- JSON-LD Structured Data -->
    {schema && (
      <script type="application/ld+json" set:html={JSON.stringify(schema)} />
    )}
    
    <!-- Additional SEO Meta Tags -->
    <meta name="robots" content="index, follow" />
    <meta name="author" content="FreeDev Tools" />
    <meta name="generator" content="Astro" />
    
    <!-- Favicon -->
    <link rel="icon" type="image/png" href="/freedevtools/t/favicon.webp" />
    
    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=EB+Garamond:ital,wght@0,400..800;1,400..800&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Cal+Sans&family=DM+Serif+Text:ital@0;1&family=Lora:ital,wght@0,400..700;1,400..700&display=swap" rel="stylesheet"> 
    
    <!-- Astro will automatically inject the built CSS -->
    
    <!-- Theme initialization script -->
    <script>
      (function() {
        const theme = localStorage.getItem('theme') || 'dark';
        if (theme === 'dark') {
          document.documentElement.classList.add('dark');
        } else {
          document.documentElement.classList.remove('dark');
        }
      })();
    </script>
  </head>
  <body class="m-0 p-0 font-sans bg-slate-50 text-slate-800 leading-relaxed dark:bg-slate-900 dark:text-slate-200">
    <div class="flex h-screen">
      {showHeader && (
        <ThemeProvider client:load>
          <Header client:load />
        </ThemeProvider>
      )}
      
      <main class="flex-1 overflow-auto bg-background" class:list={[
        showHeader ? "pt-10 md:pt-20" : "pt-0 lg:pt-0"
      ]}>
        <ThemeProvider client:load>
          <ToastProvider client:load>
            <slot />
          </ToastProvider>
        </ThemeProvider>
      </main>
    </div>
  </body>
</html>