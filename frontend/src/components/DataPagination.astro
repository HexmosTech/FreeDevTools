---
export interface Props {
  totalItems: number;
  itemsPerPage: number;
  currentPage: number;
  totalPages: number;
  itemsLabel?: string;
}

const {
  totalItems,
  itemsPerPage,
  currentPage,
  totalPages,
  itemsLabel = "items"
} = Astro.props;

const startIndex = (currentPage - 1) * itemsPerPage;
const endIndex = startIndex + itemsPerPage;
const paginatedItems = Math.min(endIndex, totalItems) - startIndex;
---

<!-- Top Pagination -->
<div class="flex flex-col sm:flex-row sm:items-center sm:justify-between mb-6 p-4 bg-slate-50 dark:bg-slate-800 rounded-lg">
  <div class="text-sm text-slate-900 dark:text-slate-400 mb-2 sm:mb-0">
    Showing {paginatedItems} of {totalItems} {itemsLabel} (Page {currentPage} of {totalPages})
  </div>

  <!-- Pagination Controls -->
  <div class="flex flex-col sm:flex-row items-start sm:items-center space-y-2 sm:space-y-0 sm:space-x-2">
    <!-- Items per page dropdown -->
    <div class="flex items-center space-x-2">
      <label for="items-per-page" class="text-sm text-slate-700 dark:text-slate-300">
        Items per page:
      </label>
      <select
        id="items-per-page"
        class="px-3 py-2 text-sm border border-slate-300 dark:border-slate-600 rounded-md bg-white dark:bg-slate-700 text-slate-700 dark:text-slate-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
        onchange="handleItemsPerPageChange(this.value)"
      >
        <option value="3">3</option>
        <option value="6">6</option>
        <option value="10">10</option>
        <option value="20">20</option>
        <option value="30">30</option>
        <option value="50">50</option>
        <option value="100">100</option>
      </select>
    </div>

    <!-- Pagination buttons -->
    <div class="flex items-center space-x-2">
      <button
        onclick="handlePageChange(currentPage - 1)"
        class="inline-flex items-center px-3 py-2 text-sm font-medium text-slate-700 dark:text-slate-300 bg-white dark:bg-slate-700 border border-slate-300 dark:border-slate-600 rounded-md hover:bg-slate-50 dark:hover:bg-slate-600 transition-colors disabled:opacity-50 disabled:cursor-not-allowed"
        disabled={currentPage <= 1}
      >
        ← Previous
      </button>

      <span class="text-sm text-slate-500 dark:text-slate-400">
        {currentPage} / {totalPages}
      </span>

      <button
        onclick="handlePageChange(currentPage + 1)"
        class="inline-flex items-center px-3 py-2 text-sm font-medium text-slate-700 dark:text-slate-300 bg-white dark:bg-slate-700 border border-slate-300 dark:border-slate-600 rounded-md hover:bg-slate-50 dark:hover:bg-slate-600 transition-colors disabled:opacity-50 disabled:cursor-not-allowed"
        disabled={currentPage >= totalPages}
      >
        Next →
      </button>
    </div>
  </div>
</div>

<script>
  function handlePageChange(page: number) {
    // This would need to be implemented based on the specific use case
    console.log('Page change to:', page);
  }

  function handleItemsPerPageChange(itemsPerPage: number) {
    // This would need to be implemented based on the specific use case
    console.log('Items per page change to:', itemsPerPage);
  }
</script>
