name: Build and Deploy

on:
  push:
    branches: [lince/test-deploy]
  workflow_dispatch: # Allows manual triggering

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2 # Fetch last 2 commits to compare

      - name: Check for changes in tool pages
        id: check-changes
        run: |
          echo "🔍 Checking for changes in frontend/src/pages/t/..."

          # Get changed files in the last commit, filter for frontend/src/pages/t/
          changed=$(git diff --name-only HEAD~1 HEAD | grep "^frontend/src/pages/t/" || true)

          if [ -n "$changed" ]; then
            echo "📦 Changes detected:"
            echo "$changed" | sed 's/^/ - /'
            echo "Proceeding with build and deploy..."
            echo "should_deploy=true" >> $GITHUB_OUTPUT
          else
            echo "❌ No changes detected in frontend/src/pages/t/. Skipping build and deploy."
            echo "should_deploy=false" >> $GITHUB_OUTPUT
          fi

      - name: Setup Node.js
        if: steps.check-changes.outputs.should_deploy == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: ./frontend/package-lock.json

      - name: Exclude non-tool pages from build
        if: steps.check-changes.outputs.should_deploy == 'true'
        run: |
          echo "🔧 Excluding non-tool pages from build by adding underscores..."
          cd frontend/src/pages

          # Find all directories except 't' and add underscore prefix if not already present
          for dir in */; do
            if [ -d "$dir" ] && [ "$dir" != "t/" ] && [[ "$dir" != _* ]]; then
              echo "Renaming $dir to _$dir"
              mv "$dir" "_$dir"
            fi
          done

      - name: Install dependencies and build
        if: steps.check-changes.outputs.should_deploy == 'true'
        run: |
          echo "📦 Installing dependencies and building..."
          cd frontend
          npm install
          npx astro build

      - name: Restore original folder structure
        if: steps.check-changes.outputs.should_deploy == 'true'
        run: |
          echo "🔄 Restoring original folder structure..."
          cd frontend/src/pages

          # Remove underscores from directories
          for dir in _*/; do
            if [ -d "$dir" ]; then
              original_name=${dir#_}  # Remove leading underscore
              original_name=${original_name%/}  # Remove trailing slash
              echo "Restoring _$original_name to $original_name"
              mv "$dir" "$original_name/"
            fi
          done

      - name: Setup SSH
        if: steps.check-changes.outputs.should_deploy == 'true'
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add server to known hosts
        if: steps.check-changes.outputs.should_deploy == 'true'
        run: |
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to server
        if: steps.check-changes.outputs.should_deploy == 'true'
        run: |
          echo "🚀 Deploying to server..."
          rsync -rvz --no-perms --no-owner --no-group --no-times --progress ./frontend/dist/ ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/lince_test_deploy/

      - name: Cleanup
        if: steps.check-changes.outputs.should_deploy == 'true'
        run: |
          echo "✅ Deployment complete!"
          echo "🎉 Tool deployment successful!"

      - name: Skip deployment message
        if: steps.check-changes.outputs.should_deploy == 'false'
        run: |
          echo "⏭️ Skipping deployment - no changes in frontend/src/pages/t/"
